
@prefix fno: <http://semweb.datasciencelab.be/ns/function#> .
@prefix lib: <http://example.com/library#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sql: <http://fno.linkeddata.es/function/sql#> . 


sql:upper a fno:Function ;
  fno:name "to Uppercase" ;
  rdfs:label "to Uppercase" ;
  dcterms:description "Returns the input with all letters in upper case" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:lower a fno:Function ;
  fno:name "to Lowercase" ;
  rdfs:label "to Lowercase" ;
  dcterms:description "Returns the input with all letters in lower case" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:concat a fno:Function ;
  fno:name "concat" ;
  rdfs:label "concat" ;
  dcterms:description "Returns the concatenation of two strings" ;
  fno:expects ( sql:valueParam sql:valueParam2 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:ltrim a fno:Function ;
  fno:name "ltrim" ;
  rdfs:label "ltrim" ;
  dcterms:description "Returns the string with leading space characters removed" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:rtrim a fno:Function ;
  fno:name "rtrim" ;
  rdfs:label "rtrim" ;
  dcterms:description "Returns the string with trailing space characters removed" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:replace a fno:Function ;
  fno:name "replace" ;
  rdfs:label "replace" ;
  dcterms:description "Returns the string with all occurrences of the string second parameter replaced by the third parameter" ;
  fno:expects ( sql:valueParam sql:valueParam2 sql:valueParam3 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:left a fno:Function;
  fno:name "left" ;
  rdfs:label "left" ;
  dcterms:description "Returns the leftmost characters from the string defined by the second parameter" ;
  fno:expects ( sql:valueParam sql:valueParam4 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:right a fno:Function;
  fno:name "right" ;
  rdfs:label "right" ;
  dcterms:description "Returns the righttmost characters from the string defined by the second parameter" ;
  fno:expects ( sql:valueParam sql:valueParam4 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:substring a fno:Function;
  fno:name "substring" ;
  rdfs:label "substring" ;
  dcterms:description "Returns a substring between two index (second and third param) from the string (first param)" ;
  fno:expects ( sql:valueParam sql:valueParam4 sql:valueParam5) ;
  fno:returns ( sql:stringOut ) ;
.

sql:trim a fno:Function ;
  fno:name "rtrim" ;
  rdfs:label "rtrim" ;
  dcterms:description "Returns the string with all prefixes and suffixes removed" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:soundex a fno:Function ;
  fno:name "soundex" ;
  rdfs:label "soundex" ;
  dcterms:description "Returns the string with all prefixes and suffixes removed" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:locate a fno:Function ;
  fno:name "locate" ;
  rdfs:label "locate" ;
  dcterms:description "Returns the location of a search string (valueParam) in a string(valueParam2)" ;
  fno:expects ( sql:valueParam sql:valueParam2 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:length a fno:Function ;
  fno:name "length" ;
  rdfs:label "length" ;
  dcterms:description "Returns the length string" ;
  fno:expects ( sql:valueParam ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:regexp_like a fno:Function ;
  fno:name "regexp_like" ;
  rdfs:label "regexp_like" ;
  dcterms:description "Returns the regular expression (second param) matching to a string (first param), including some specifications (third param) for case-insensitive ‘i’, case-sensitive ‘c’, allowing period (.) ’n’ and allowing multiple lines ‘m’" ;
  fno:expects ( sql:valueParam sql:valueParam2 sql:valueParam3 ) ;
  fno:returns ( sql:stringOut ) ;
.

sql:valueParam a fno:Parameter ;
  fno:name "input value" ;
  rdfs:label "input value" ;
  fno:type xsd:string ;
  fno:predicate sql:valueParameter
.

sql:valueParam2 a fno:Parameter ;
  fno:name "input value 2" ;
  rdfs:label "input value 2" ;
  fno:type xsd:string;
  fno:predicate sql:valueParameter2
.

sql:valueParam3 a fno:Parameter ;
  fno:name "input value 3" ;
  rdfs:label "input value 3" ;
  fno:type xsd:string;
  fno:predicate sql:valueParameter3
.

sql:valueParam4 a fno:Parameter ;
  fno:name "input value 4" ;
  rdfs:label "input value 4" ;
  fno:type xsd:decimal;
  fno:predicate sql:valueParameter4
.

sql:valueParam5 a fno:Parameter ;
  fno:name "input value 5" ;
  rdfs:label "input value 5" ;
  fno:type xsd:decimal;
  fno:predicate sql:valueParameter5 
.

sql:stringOut a fno:Output ;
  fno:name "output string" ;
  rdfs:label "output string" ;
  fno:type xsd:string ; 
  fno:predicate sql:stringOutput
.

